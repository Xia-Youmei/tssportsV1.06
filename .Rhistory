hello
hello()
usethis::use_mit_license()
library(add100)
hello()
load all()
library(devtools)
load all()
library(add100)
add100(5)
library('devtools')
load_all()
load_all()
add10000(5)
load_all()
load_all()
collapse("./examples")
load_all()
load_all()
addchu10000(90)
combine_read_counts("./examples/")
load_all()
library(add100)
load_all()
load_all()
library(add100)
load_all()
load_all()
collapse_mature_mirna_reads("./examples")
collapse_mature_mirna_reads("./examples/")
collapse_mature_mirna_reads("/e/life/02Build_R_bao/02learn/add100/examples")
getwd
getwd()
collapse_mature_mirna_reads("E:/life/02Build_R_bao/02learn/add100/examples")
collapse_mature_mirna_reads("E:/life/02Build_R_bao/02learn/add100/examples")
combine_read_counts("E:/life/02Build_R_bao/02learn/add100/examples")
combine_read_counts("E:/life/02Build_R_bao/02learn/add100/examples")
load_all()
collapse_mature_mirna_reads("E:/life/02Build_R_bao/02learn/add100/examples")
combine_read_counts("E:/life/02Build_R_bao/02learn/add100/examples")
history()
library('devtools')
load_all()
usethis::use_tidy_github_actions()
library(add100)
add100(5)
load_all()
library('devtools')
load_all()
library(tssportsV1.02)
load_all()
collapse_mature_mirna_reads("E:/life/02Build_R_bao/02learn/add100/examples")
library("collapse_mature_mirna_reads")
library(tssportsV1.02)
devtools::document()
Install Package
library(addchu1000)
library(tssportsV1.02)
addchu1000(1)
library(tssportsV1.02)
library('devtools')
load_all()
combine_read_counts("E:/life/02Build_R_bao/02learn/add100/examples")
collapse_mature_mirna_reads("E:/life/02Build_R_bao/02learn/add100/examples")
add100(5)
library(tssportsV1.02)
add100(5)
collapse_mature_mirna_reads("E:/life/02Build_R_bao/02learn/add100/examples")
combine_read_counts("E:/life/02Build_R_bao/02learn/add100/examples")
collapse_mature_mirna_reads("./examples")
collapse_mature_mirna_reads("/e/life/02Build_R_bao/02learn/add100/examples")
hello()
getwd()
setwd("E:/life/02Build_R_bao/02learn/add100/examples")
setwd("E:/life/02Build_R_bao/07test/output_txt/sportstestV1.0/output/") #指定工作目录
collapse_mature_mirna_reads("E:/life/02Build_R_bao/07test/output_txt/sportstestV1.0/output/")
collapse_mature_mirna_reads("E:/life/02Build_R_bao/07test/output_txt/sportstestV1.0/output/test_f/")
setwd("E:/life/02Build_R_bao/02learn/tssportsV1.04/examples/")
collapse_mature_mirna_reads("E:/life/02Build_R_bao/02learn/tssportsV1.04/examples/")
load_all()  #可以使函数变为R包功能
library(tssportsV1.02)  #再次加载才能使用
combine_read_counts()
load_all()  #可以使函数变为R包功能
library(tssportsV1.02)  #再次加载才能使用
combine_read_counts()
combine_read_counts("E:/life/02Build_R_bao/02learn/tssportsV1.04/examples/")
load_all()
library('devtools')  #R包开发使用，如load_all()功能
load_all()  #可以使函数变为R包功能
library(tssportsV1.04)  #再次加载才能使用
library(tssportsV1.04)
library(tssportsV1.02)
combine_read_counts()
combine_read_counts（
combine_read_counts()
load_all()  #可以使函数变为R包功能
library(tssportsV1.02)
devtools::document()
hello()
hello()
add100(5)
library(tssportsV1.02)
add100(5)
load_all()  #可以使函数变为R包功能
add100(5)
combine_read_counts("E:/life/02Build_R_bao/02learn/tssportsV1.04/examples/")
collapse_mature_mirna_reads("E:/life/02Build_R_bao/02learn/tssportsV1.04/examples/")
hello()
install.packages("tssportsV1.02",type="binary")
install.packages("tssportsV1.02", type = "binary")
install.packages("tssportsV1.02")
library('devtools')  #R包开发使用，如load_all()功能
load_all()  #可以使函数变为R包功能
library(tssportsV1.02)  #再次加载才能使用
library(add100)
add100(5)
combine_read_counts（
combine_read_counts()
combine_read_counts("E:/life/02Build_R_bao/02learn/tssportsV1.04/examples/")
load_all()  #可以使函数变为R包功能
library(tssportsV1.02)  #再次加载才能使用
library(add100) #再次加载才能使用,看起来这个才确定功能，咋回事
add100(5)
library('devtools')  #R包开发使用，如load_all()功能
load_all()  #可以使函数变为R包功能
library(tssportsV1.02)  #再次加载才能使用
library(add100) #再次加载才能使用,看起来这个才确定功能，咋回事
add100(5)
deseq2("E:/life/02Build_R_bao/02learn/tssportsV1.05/examples/")
getwd()
setwd("E:/life/02Build_R_bao/02learn/tssportsV1.05/examples/")
deseq2("E:/life/02Build_R_bao/02learn/tssportsV1.05/examples/")
library(tidyverse)  #管道%>%
suppressWarnings(suppressMessages(library(DESeq2)))
#print("usage: Rscript DE.R [rna counts file] [experiments csv file] [output file]")
#count matrix
counts=read.table("sports_combined_sample_fragments_counts_matrix_0.5.txt",header=TRUE,row.names=1,sep="\t",check.names=FALSE)
#check sample names
for(i in 1:length(colnames(counts))){
colnames(counts)[i]=strsplit(colnames(counts)[i],"/")[[1]][1]
}
experiments_design=read.table("sports_combined_sample_fragments_annotation.txt",header = T, check.names = F)
experiments_design <- experiments_design[!duplicated(experiments_design$Fragment),]   #去重复
rownames(experiments_design) <- experiments_design$Fragment   #将行名变为Gene Symbol
experiments_design<-experiments_design[,-1]   #除去第一列
#取行名交集
comgene <- intersect(rownames(counts),rownames(experiments_design))
counts <- counts[comgene,]
class(counts)#判断数据类型
class(comgene)
experiments_design <- experiments_design[comgene,]  #取counts数据
a <- rownames(counts)
b <- rownames(experiments_design)
identical(a,b)  #判断2数据是否一致
counts$Gene <- as.character(experiments_design$Annotation)   #增加Gene一列等于experiments_design的Annotation名字  #新增Gene Symbol
counts <- counts[!duplicated(counts$Gene),]   #去重复，这里有很多重复基因名1932，但是片段不同278948
rownames(counts) <- counts$Gene   #将行名变为Gene Symbol，会出现不允许有重复的'row.names'
ncol(experiments_design)
nrow
counts <- counts[,-ncol(counts)]   #去除最后一列
write.table(counts, file = "sports_counts_all.txt",sep = "\t",row.names = T,col.names = NA,quote = F)
setwd("E:/life/02Build_R_bao/02learn/tssportsV1.05/examples/")
write.table(res_deseq2,file = "sports_DEG_fdr005_2fc_all.txt",sep = "\t",row.names = FALSE,quote = F)
write.table(res_deseq2,file = "sports_DEG_fdr005_2fc_all.txt",sep = "\t",row.names = FALSE,quote = F)
write.table(counts, file = "sports_counts_all.txt",sep = "\t",row.names = T,col.names = NA,quote = F)
#counts = counts[apply(counts, 1, function(x) sum(x > 1) > 32), ]
conditions=data.frame(sample=colnames(counts),
group=factor(ifelse(substr(colnames(counts),10,11) == c(20:22),"T","N"),levels = c("N","T"))) %>%
column_to_rownames("sample")  #定义实验条件，区分对照组与实验组
dds <- DESeqDataSetFromMatrix(
countData = counts,
colData = conditions,
design = ~ group)
dds <- DESeq(dds)
resultsNames(dds)
res <- results(dds)
save(res,file = "LIHC_DEG.rda")  #一定要保存！
res_deseq2 <- as.data.frame(res)%>%
arrange(padj) %>%
dplyr::filter(abs(log2FoldChange) > 2, padj < 0.05)#根据自己需要
res_deseq2=res_deseq2[!is.na(res_deseq2$padj),]
#sports_DEG_fdr005_2fc_all.txt之前保存时标题第一列缺少了ID，所以会被直接读成行名，有ID就不会，行名会是自带的数字
#res_deseq2 <- read.table("sports_DEG_fdr005_2fc_all.txt",sep = "\t",check.names = F,stringsAsFactors = F,header = T)
res_deseq2$ID <- rownames(res_deseq2)
res_deseq2 <- res_deseq2[,c(length(res_deseq2),1:(length(res_deseq2)-1))] #取最后一列到到第一列
write.table(res_deseq2,file = "sports_DEG_fdr005_2fc_all.txt",sep = "\t",row.names = FALSE,quote = F)
setwd("x") #指定工作目录
deseq2("E:/life/02Build_R_bao/02learn/tssportsV1.05/examples/")
library('devtools')  #R包开发使用，如load_all()功能
load_all()  #可以使函数变为R包功能
library(tssportsV1.02)  #再次加载才能使用
library(add100) #再次加载才能使用,看起来这个才确定功能，咋回事
add100(5)
setwd("E:/life/02Build_R_bao/02learn/tssportsV1.05/examples/")
deseq2()
load_all()
deseq2()
load_all()
tsRNA_ann_classify()
library(tidyverse)  #管道%>%
library(stringr)  #正则表达式
library(stringi)   #处理字符串,如字符串替换
#sports_DEG_fdr005_2fc_all.txt之前保存时标题第一列缺少了ID，所以会被直接读成行名，有ID就不会，行名会是自带的数字
filelist = list.files(pattern = "*_2fc_all.txt$")
collapse_miRNA = lapply (filelist,function(x)read.table(x,sep = "\t",check.names = F,stringsAsFactors = F,header = T))  #lapply函数 对列表、数据框数据集进行循环,输入为列表;function()指令来命名和创建函数
cnames=c("ID","Sequence", "Length", "Reads", "Match_Genome", "Annotation")
colnames(collapse_miRNA35p)=cnames
View(collapse_miRNA)
colnames(collapse_miRNA)=cnames
collapse_miRNA <- read.table("sports_DEG_fdr005_2fc_all.txt",sep = "\t",check.names = F,stringsAsFactors = F,header = T)
View(collapse_miRNA)
#1、批量处理-miR-|-let-,提取出含有关键词的全部行成为新的数据框
miRlet <-  subset(collapse_miRNA,grepl("-miR-|-let-",collapse_miRNA$ID))  #取出不包含某些含-miR-或者-mir-或-let-特征关键词的行
#2、批量处理tRNA,提取出含有关键词的全部行成为新的数据框
tsRNA <-  subset(collapse_miRNA,grepl("tRNA",collapse_miRNA$ID))  #取出不包含某些含-miR-或者-mir-或-let-特征关键词的行
#3、批量处理rRNA,提取出含有关键词的全部行成为新的数据框
rsRNA <-  subset(collapse_miRNA,grepl("rRNA",collapse_miRNA$ID))  #取出不包含某些含-miR-或者-mir-或-let-特征关键词的行
#4、批量处理YRNA,提取出含有关键词的全部行成为新的数据框
ysRNA <-  subset(collapse_miRNA,grepl("YRNA",collapse_miRNA$ID))  #取出不包含某些含-miR-或者-mir-或-let-特征关键词的行
#保存为txt文件
write.table(miRlet,"miRNA_diff.txt",sep = "\t",row.names = FALSE,quote = F)  #row.names = FALSE去掉序号一列
write.table(tsRNA,"tsRNA_diff.txt",sep = "\t",row.names = FALSE,quote = F)  #row.names = FALSE去掉序号一列
write.table(rsRNA,"rsRNA_diff.txt",sep = "\t",row.names = FALSE,quote = F)  #row.names = FALSE去掉序号一列
write.table(ysRNA,"ysRNA_diff.txt",sep = "\t",row.names = FALSE,quote = F)  #row.names = FALSE去掉序号一列
collapse_miRNA <- read.table("sports_DEG_fdr005_2fc_all.txt",sep = "\t",check.names = F,stringsAsFactors = F,header = T)
View(collapse_miRNA)
load_all()
tsRNA_ann_classify()
load_all()
pca()
load_all()
pie_plot_tsRNA_aa()
load_all()
pie_plot_tsRNA_end()
load_all()
maplot()
load_all()
heatmap_plot()
load_all()
volcano_plot()
